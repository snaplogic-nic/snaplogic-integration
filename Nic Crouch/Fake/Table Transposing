[{"link_serial":102,"update_time":"2017-03-09T02:59:52.653000+00:00","scrub_version":"48f99abcdf450e7c49a04015355fb699f785e8cbf8288d894686a64c6caeddd1","instance_id":"5d02d1b0-e597-4a57-9952-22d977e4dfff","snap_map":{"a3188b07-150f-4826-b458-aee6dd27e432":{"instance_version":1,"class_id":"com-snaplogic-snaps-binary-simpleread","class_build_tag":"snapsmrc398","class_fqid":"com-snaplogic-snaps-binary-simpleread_1-snapsmrc398","instance_id":"a3188b07-150f-4826-b458-aee6dd27e432","property_map":{"info":{"notes":{"value":null},"label":{"value":"File Reader"}},"view_serial":100,"account":{"account_ref":{"value":{}}},"settings":{"executeDuringPreview":{"value":true},"preventURLEncoding":{"value":false},"filePath":{"expression":false,"value":"../shared/fakepopdata.csv"}},"error":{"error0":{"label":{"value":"error0"},"view_type":{"value":"document"}},"error_behavior":{"value":"fail"}},"output":{"output0":{"label":{"value":"output0"},"view_type":{"value":"binary"}}}},"class_version":1,"instance_fqid":"a3188b07-150f-4826-b458-aee6dd27e432_1"},"96d686b4-e506-4f5a-84a2-19df44891d81":{"instance_version":1,"class_id":"com-snaplogic-snaps-transform-csvparser","class_build_tag":"snapsmrc398","class_fqid":"com-snaplogic-snaps-transform-csvparser_3-snapsmrc398","instance_id":"96d686b4-e506-4f5a-84a2-19df44891d81","property_map":{"info":{"label":{"value":"CSV Parser"}},"view_serial":100,"input":{"input0":{"label":{"value":"input0"},"view_type":{"value":"binary"}}},"settings":{"escapeChar":{"value":"\\"},"quoteCharacter":{"value":"\""},"containsHeader":{"value":true},"charset":{"value":"Auto BOM detect"},"skipLines":{"value":0},"delimiter":{"value":","},"errorPolicy":{"value":"Both"},"validateHeaders":{"value":false}},"error":{"error0":{"label":{"value":"error0"},"view_type":{"value":"document"}},"error_behavior":{"value":"fail"}},"output":{"output0":{"label":{"value":"output0"},"view_type":{"value":"document"}}}},"class_version":3,"instance_fqid":"96d686b4-e506-4f5a-84a2-19df44891d81_1"},"643782a1-ebf4-492f-b58d-14d12b968d4a":{"instance_id":"643782a1-ebf4-492f-b58d-14d12b968d4a","class_id":"com-snaplogic-snaps-script-script","class_build_tag":"snapsmrc398","class_fqid":"com-snaplogic-snaps-script-script_2-snapsmrc398","instance_version":8,"property_map":{"info":{"notes":{"value":null},"label":{"value":"Script"}},"view_serial":100,"input":{"input0":{"label":{"value":"input0"},"view_type":{"value":"document"}}},"settings":{"editable_content":{"value":"# Import the interface required by the Script snap.\nfrom com.snaplogic.scripting.language import ScriptHook\nimport java.util\n\nclass TransformScript(ScriptHook):\n    def __init__(self, input, output, error, log):\n        self.input = input\n        self.output = output\n        self.error = error\n        self.log = log\n\n    # The \"execute()\" method is called once when the pipeline is started\n    # and allowed to process its inputs or just send data to its outputs.\n\n    def execute(self):\n        self.log.info(\"Executing Transform script\")\n        wrapper = java.util.HashMap()\n        while self.input.hasNext():\n            try:\n                # Read the next document, wrap it in a map and write out the wrapper\n                in_doc = self.input.next()\n                \n                if in_doc['City'] not in wrapper:\n                    wrapper[in_doc['City']] = {'City':in_doc['City']}\n                wrapper[in_doc['City']][in_doc['Year']] = in_doc['Population']\n                \n            except Exception as e:\n                errWrapper = {\n                    'errMsg' : str(e.args)\n                }\n                self.log.error(\"Error in python script\")\n                self.error.write(errWrapper)\n\n        for each_city in wrapper:\n            self.output.write(wrapper[each_city])\n        self.log.info(\"Finished executing the Transform script\")\n\n# The Script Snap will look for a ScriptHook object in the \"hook\"\n# variable.  The snap will then call the hook's \"execute\" method.\nhook = TransformScript(input, output, error, log)"},"language":{"value":"Python"},"executable_during_suggest":{"value":true},"script":{"expression":false,"value":null}},"error":{"error0":{"label":{"value":"error0"},"view_type":{"value":"document"}},"error_behavior":{"value":"fail"}},"output":{"output0":{"label":{"value":"output0"},"view_type":{"value":"document"}}}},"class_version":2,"instance_fqid":"643782a1-ebf4-492f-b58d-14d12b968d4a_8"}},"phase_snode_id":null,"class_fqid":"com-snaplogic-pipeline_8","partition_snode_id":"577cb90ea415f5247a8ec1bd","path_id":"/snaplogic/Nic Crouch/Fake","create_time":"2017-03-09T01:14:54.214000+00:00","snode_id":"58c0ac8eba6d563afdad878f","update_user_id":"ncrouch@snaplogic.com","org_snode_id":"52e99318640a9a03d8681d0d","path":"/snaplogic/Nic Crouch/Fake/Table Transposing","instance_version":11,"migrate_version":"mrc291","scrub_backup":[],"create_user_id":"ncrouch@snaplogic.com","project_snode_id":"58c0c401ba6d563aff63fd78","property_map":{"info":{"notes":{"value":null},"author":{"value":"ncrouch@snaplogic.com"},"purpose":{"value":null},"pipeline_doc_uri":{"value":null},"label":{"value":"Table Transposing"}},"output":{"643782a1-ebf4-492f-b58d-14d12b968d4a_output0":{"label":{"value":"Script - output0"},"view_type":{"value":"document"}}},"settings":{"param_table":{"value":[]},"imports":{"value":[]}},"instance_version":9,"error":{"error_behavior":{"value":"none"}},"input":{}},"render_map":{"pan_x_num":0,"default_snaplex":"52e99449640a9a03d8682304","scale_ratio":1,"detail_map":{"96d686b4-e506-4f5a-84a2-19df44891d81":{"grid_x_int":3,"grid_y_int":1,"rot_tail_int":0,"output":{},"input":{},"rot_int":0},"a3188b07-150f-4826-b458-aee6dd27e432":{"grid_x_int":2,"rot_int":0,"grid_y_int":1,"rot_tail_int":0},"643782a1-ebf4-492f-b58d-14d12b968d4a":{"grid_x_int":4,"rot_int":0,"grid_y_int":1,"rot_tail_int":0}},"pan_y_num":0},"org_id":"52e99318640a9a03d8681d0d","class_version":8,"class_id":"com-snaplogic-pipeline","instance_fqid":"5d02d1b0-e597-4a57-9952-22d977e4dfff_11","link_map":{"link100":{"src_view_id":"output0","dst_view_id":"input0","src_id":"a3188b07-150f-4826-b458-aee6dd27e432","dst_id":"96d686b4-e506-4f5a-84a2-19df44891d81"},"link101":{"src_view_id":"output0","dst_view_id":"input0","src_id":"96d686b4-e506-4f5a-84a2-19df44891d81","dst_id":"643782a1-ebf4-492f-b58d-14d12b968d4a"}}}]